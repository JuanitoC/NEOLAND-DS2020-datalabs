library(ggplot2)
library(dplyr)
# Cargamos el dataset
data_titanic <- read.csv(file = "../NEOLAND_professor-BAK/bootcamp_DS_201920_NEOLAND/04-R_STUDIO/R_notebook/data/titanic.csv", stringsAsFactors = F)
# Cargamos el dataset
data_titanic <- read.csv(file = "C:/Users/JD/Desktop/Datos/titanic.csv", stringsAsFactors = F)
# observamos las dimensiones del dataset
dim(data_titanic)
# extraemos las 10 primeras obsvs de 4 columnas
head(data_titanic[1:4], n = 10)
typeof(data_titanic)
is.data.frame(data_titanic)
# extraemos la estructura del dataset
str(data_titanic)
# Trabajamos los atributos con valores vacios
is.na(data_titanic$PassengerId[1:10])
# colSums con is.na
colSums(is.na(data_titanic))
# Tabla de frecuencia del atributo Age
table(data_titanic$Age)
table(data_titanic$Embarked)
# tabla de frecuencia de Género
table(data_titanic$Sex)
# Summary del dataset completo
summary(data_titanic)
# Summary de una columna
summary(data_titanic$Age)
summary(data_titanic$Embarked)
# sumamos los valores que son vacios
colSums(data_titanic == "")
colSums(data_titanic == "", na.rm = T)
# Imputamos las observaciones vacías de Embarked
table(data_titanic$Embarked) # valores absolutos
# visualizamos los valores relativos
round(prop.table(table(data_titanic$Embarked)), 2)
# Realizamos un backup del dataset
titanicBAK <- data_titanic
# Tomamos como valor "S" los valores vacíos de Embarked
attach(data_titanic)
# Asignamos a Embarked S
Embarked[Embarked == ""] = "S"
table(Embarked)
detach(data_titanic)
attach(data_titanic)
table(Cabin)
hist(table(Cabin))
detach(data_titanic)
# Paso 1 observamos el promedio
attach(data_titanic)
mean(Age) # No podemos realizar el promedio porque existen valores NA
# Forzamos con el parámetro na.rm
mean(Age, na.rm = T)
floor(mean(Age, na.rm = T)) # redondedo por el "suelo"
ceiling(mean(Age, na.rm = T)) # redondedo por el "techo"
media_Age <- ceiling(mean(Age, na.rm = T))
media_Age
# Sustituimos los valores NA con el promedio calculado
summary(Age)
hist(Age)
# Paso 1 observamos el promedio
attach(data_titanic)
mean(Age) # No podemos realizar el promedio porque existen valores NA
# Forzamos con el parámetro na.rm
mean(Age, na.rm = T)
floor(mean(Age, na.rm = T)) # redondedo por el "suelo"
ceiling(mean(Age, na.rm = T)) # redondedo por el "techo"
media_Age <- ceiling(mean(Age, na.rm = T))
media_Age
# Sustituimos los valores NA con el promedio calculado
summary(Age)
hist(Age)
# operación de imputacíón
Age[Age == "NA"] = media_Age # no atribuye los valores promedio porque NA no es una observación del tipo char
# Summary de una columna
summary(Age)
Age[is.na(Age)] = media_Age # utilizamos la evaluación is.na
summary(Age)
hist(Age,
main = "Histograma del atributo `Age`",
xlab = "Age",
ylab = "frecuencia")
detach(data_titanic)
# Observamos los valores únicos de los atributos
attach(data_titanic)
apply(data_titanic, MARGIN = 2, FUN = function(x) length (unique(x)))
# Realizamos la factorización de los atributos de forma manual
# Survived <- as.factor(Survived)
# Pclass <- as.factor(Pclass)
# Sex <- as.factor(Sex)
# Embarked <- as.factor(Embarked)
# Alternativa con FOR...LOOP
cols <- c("Survived",
"Pclass",
"Sex",
"Embarked")
for (i in cols){
data_titanic[,i] = as.factor(data_titanic[,i])
}
str(data_titanic)
detach(data_titanic)
# Visualizamos la relación de las vars `SEX` y `Survived`
dim(data_titanic)
dim(data_titanic)[1]
# Guardamos el valor de filas
filas <-  dim(data_titanic)[1]
# Visualizamos con la discretización del género según el atributo `Survived`
ggplot(data=data_titanic[1:filas,],
aes(
x = Sex,
fill = Survived
)
) + geom_bar()
library(ggplot2)
# Visualizamos la relación de las vars `SEX` y `Survived`
dim(data_titanic)
dim(data_titanic)[1]
# Guardamos el valor de filas
filas <-  dim(data_titanic)[1]
# Visualizamos con la discretización del género según el atributo `Survived`
ggplot(data=data_titanic[1:filas,],
aes(
x = Sex,
fill = Survived
)
) + geom_bar()
# Visualizamos la frecuencia del género según el atributo `Pclass`
ggplot(data=data_titanic[1:filas,],
aes(
x = Sex,
fill = Pclass
)
) + geom_bar()
# Visualizamos sin discretizar
ggplot(data=titanicBAK[1:filas,],
aes(
x = Sex,
fill = Survived
)
) + geom_bar()
# Visualizamos
ggplot(data=titanicBAK[1:filas,],
aes(
x = Sex,
fill = Pclass
)
) + geom_bar()
# Visualizamos la frecuencia Survived y Embarked con la discretización
ggplot(
data = data_titanic[1:filas, ],
aes(
x = Embarked,
fill = Survived
)
) + geom_bar(position = "fill")+ylab("Frecuencia")
# Creamos un gráfico combinado con frecuencias relativas
t <- table(data_titanic[1:filas, ]$Embarked,
data_titanic[1:filas, ]$Survived)
t # devuelve una tabla con valores absolutos
dim(t)
for (i in 1:dim(t)[1]){
t[i,] <- t[i,] / sum(t[i,]) * 100
}
t
ggplot(data=data_titanic[1:filas,],
aes(x = Embarked,
fill= Survived
)
) + geom_bar(position="fill") + ylab("Frecuencia")+facet_wrap(~Sex)
# Cargamos el juego de datos
datosAdult <- read.csv('http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',stringsAsFactors = FALSE, header = FALSE)
# Nombres de los atributos
names(datosAdult) <- c("age","workclass","fnlwgt","education","education-num","marital-status","occupation","relationship","race","sex","capital-gain","capital-loss","hour-per-week","native-country","income")
# Cargamos el juego de datos
datosAdult <- read.csv('http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',stringsAsFactors = FALSE, header = FALSE)
# Nombres de los atributos
names(datosAdult) <- c("age","workclass","fnlwgt","education","education-num","marital-status","occupation","relationship","race","sex","capital-gain","capital-loss","hour-per-week","native-country","income")
View(datosAdult)
unique(datosAdult$education)
unique(datosAdult$`education-num`)
View(datosAdult)
View(datosAdult)
filas= nrow(datosAdult)
E18=c(" Preschool"," 1st-4th"," 5th-6th"," 7th-8th"," 9th"," 10th" ," 11th"," 12th")
E912=c(" HS-grad"," Some-college"," Assoc-acdm"," Assoc-voc")
E1316=c(" Bachelors"," Masters" ," Prof-school"," Doctorate")
for (i in filas){
if (datosAdult$education[i] %in% E18){
datosAdult$education[i]= "E18"
} else if(datosAdult$education[i] %in% E912){
datosAdult$education[i]= "E912"
} else if (datosAdult$education[i] %in% E1316){
datosAdult$education[i]= "E1316"
}
}
table(datosAdult$education)
```{r}
filas= nrow(datosAdult)
E18=c(" Preschool"," 1st-4th"," 5th-6th"," 7th-8th"," 9th"," 10th" ," 11th"," 12th")
E912=c(" HS-grad"," Some-college"," Assoc-acdm"," Assoc-voc")
E1316=c(" Bachelors"," Masters" ," Prof-school"," Doctorate")
for (i in filas){
if (datosAdult$education[i] %in% E18){
datosAdult$education[i]= "E18"
} else if(datosAdult$education[i] %in% E912){
datosAdult$education[i]= "E912"
} else if (datosAdult$education[i] %in% E1316){
datosAdult$education[i]= "E1316"
}
}
unique(datosAdult$education)
filas= nrow(datosAdult)
E18=c(" Preschool"," 1st-4th"," 5th-6th"," 7th-8th"," 9th"," 10th" ," 11th"," 12th")
E912=c(" HS-grad"," Some-college"," Assoc-acdm"," Assoc-voc")
E1316=c(" Bachelors"," Masters" ," Prof-school"," Doctorate")
for (i in filas){
if (datosAdult$education[i] %in% E18){
datosAdult$education[i]= "E18"
} else if(datosAdult$education[i] %in% E912){
datosAdult$education[i]= "E912"
} else if (datosAdult$education[i] %in% E1316){
datosAdult$education[i]= "E1316"
}
}
table(datosAdult$education)
unique(datosAdult$education)
unique(datosAdult$`education-num`)
# Cargamos el juego de datos
datosAdult <- read.csv('http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',stringsAsFactors = FALSE, header = FALSE)
# Nombres de los atributos
names(datosAdult) <- c("age","workclass","fnlwgt","education","education-num","marital-status","occupation","relationship","race","sex","capital-gain","capital-loss","hour-per-week","native-country","income")
# Cargamos el juego de datos
datosAdult <- read.csv('http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',stringsAsFactors = FALSE, header = FALSE)
datosAdultBase <- datosAdult
# Cargamos el juego de datos
datosAdult <- read.csv('http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',stringsAsFactors = FALSE, header = FALSE)
datosAdultBase <- datosAdult
# Nombres de los atributos
names(datosAdult) <- c("age","workclass","fnlwgt","education","education-num","marital-status","occupation","relationship","race","sex","capital-gain","capital-loss","hour-per-week","native-country","income")
unique(datosAdult$education)
unique(datosAdult$`education-num`)
filas= nrow(datosAdult)
E18=c(" Preschool"," 1st-4th"," 5th-6th"," 7th-8th"," 9th"," 10th" ," 11th"," 12th")
E912=c(" HS-grad"," Some-college"," Assoc-acdm"," Assoc-voc")
E1316=c(" Bachelors"," Masters" ," Prof-school"," Doctorate")
for (i in filas){
if (datosAdult$education[i] %in% E18){
datosAdult$education[i]= "E18"
} else if(datosAdult$education[i] %in% E912){
datosAdult$education[i]= "E912"
} else if (datosAdult$education[i] %in% E1316){
datosAdult$education[i]= "E1316"
}
}
table(datosAdult$education)
filas= nrow(datosAdult)
E18=c(" Preschool"," 1st-4th"," 5th-6th"," 7th-8th"," 9th"," 10th" ," 11th"," 12th")
E912=c(" HS-grad"," Some-college"," Assoc-acdm"," Assoc-voc")
E1316=c(" Bachelors"," Masters" ," Prof-school"," Doctorate")
for (i in filas){
if (datosAdult$education[i] %in% E18){
datosAdult$education[i]= "E18"
} else if(datosAdult$education[i] %in% E912){
datosAdult$education[i]= "E912"
} else if (datosAdult$education[i] %in% E1316){
datosAdult$education[i]= "E1316"
}
}
unique(datosAdult$education)
table(datosAdult$education)
hist(datosAdult$income)
hist(datosAdult)
hist(datosAdult$`education-num`)
table(datosAdult$income)
hist(table(datosAdult$income))
table(datosAdult$workclass)
