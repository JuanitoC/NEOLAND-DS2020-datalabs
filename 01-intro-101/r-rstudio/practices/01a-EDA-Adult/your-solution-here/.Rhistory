rm(conf,i)
##• Hago una busqueda para comprobar los equipos sin conferencia, el equipo son los washington bullets.
select(nba, Conference,Team) %>% filter(Conference=='') %>% distinct()
## Para saber a que asignarlo busco otros posibles equipos de washington
select(nba, Conference,Team) %>% filter(str_detect(Team,"Washington")) %>% distinct()
## encuentro que hay otro equipo de Washington y que corresponde a la conferencia este
nba <- mutate(nba,Conference= if_else(Conference==''
,'East'
,Conference
)
)
## Revisamos que todos los equipos tengan la conferencia asignada
round(table(nba$Conference)/length(nba$Conference)*100,1)
nba$Conference <- as.factor(nba$Conference)
str(nba['Conference'])
conf<-unique(nba$Conference)
conf
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(stringr)
nba<-read.csv("NBA_player_of_the_week.csv",header = TRUE)
class(nba)
str(nba)
head(nba,6)
ls(nba)
names(nba)
row.names(nba)
levels(nba$Conference)
table(nba$Conference)
conf<-unique(nba$Conference)
conf
conf = select(nba, Conference,Team) %>% filter(Conference!='') %>% distinct() ## Damos por hecho que los equipos siempre han estado en la misma conferencia, así que creamos un dataframe con conferencia y equipo, eliminamos los valores en blanco y después los duplicados para tener los datos sólo una vez
i=1
for (i in c(1:nrow(conf))){
nba <- mutate(nba,Conference= if_else(Conference=='' & Team==conf[i,2]
,conf[i,1]
,Conference)
)
}
## Comprobamos que todo ha hay un 0.7% de Equipos sin conferencia
round(table(nba$Conference)/length(nba$Conference)*100,1)
rm(conf,i)
##• Hago una busqueda para comprobar los equipos sin conferencia, el equipo son los washington bullets.
select(nba, Conference,Team) %>% filter(Conference=='') %>% distinct()
## Para saber a que asignarlo busco otros posibles equipos de washington
select(nba, Conference,Team) %>% filter(str_detect(Team,"Washington")) %>% distinct()
## encuentro que hay otro equipo de Washington y que corresponde a la conferencia este
nba <- mutate(nba,Conference= if_else(Conference==''
,'East'
,Conference
)
)
## Revisamos que todos los equipos tengan la conferencia asignada
round(table(nba$Conference)/length(nba$Conference)*100,1)
View(nba)
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
nba[x] <- as.factor(nba[x])
str(nba[x])
}
rm(Vartofact )
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
nba[,x] <- as.factor(nba[,x])
str(nba[,x])
}
rm(Vartofact )
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(stringr)
nba<-read.csv("NBA_player_of_the_week.csv",header = TRUE)
class(nba)
str(nba)
head(nba,6)
ls(nba)
View(nba)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(stringr)
nba<-read.csv("NBA_player_of_the_week.csv",header = TRUE)
class(nba)
str(nba)
head(nba,6)
ls(nba)
names(nba)
row.names(nba)
levels(nba$Conference)
table(nba$Conference)
conf<-unique(nba$Conference)
conf
conf = select(nba, Conference,Team) %>% filter(Conference!='') %>% distinct() ## Damos por hecho que los equipos siempre han estado en la misma conferencia, así que creamos un dataframe con conferencia y equipo, eliminamos los valores en blanco y después los duplicados para tener los datos sólo una vez
i=1
for (i in c(1:nrow(conf))){
nba <- mutate(nba,Conference= if_else(Conference=='' & Team==conf[i,2]
,conf[i,1]
,Conference)
)
}
## Comprobamos que todo ha hay un 0.7% de Equipos sin conferencia
round(table(nba$Conference)/length(nba$Conference)*100,1)
rm(conf,i)
##• Hago una busqueda para comprobar los equipos sin conferencia, el equipo son los washington bullets.
select(nba, Conference,Team) %>% filter(Conference=='') %>% distinct()
## Para saber a que asignarlo busco otros posibles equipos de washington
select(nba, Conference,Team) %>% filter(str_detect(Team,"Washington")) %>% distinct()
## encuentro que hay otro equipo de Washington y que corresponde a la conferencia este
nba <- mutate(nba,Conference= if_else(Conference==''
,'East'
,Conference
)
)
## Revisamos que todos los equipos tengan la conferencia asignada
round(table(nba$Conference)/length(nba$Conference)*100,1)
nba$Conference <- as.factor(nba$Conference)
str(nba['Conference'])
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
nba[,x] <- as.factor(nba[,x])
str(nba[,x])
}
rm(Vartofact )
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
table(is.na(nba[,x]))
table(is.null(nba[,x]))
sum(apply(nba[,x],2,is.nan))
}
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
table(is.na(nba[,x]))
}
##table(is.null(nba[,x]))
## sum(apply(nba[,x],2,is.nan)
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
print(table(is.na(nba[,x])))
}
##table(is.null(nba[,x]))
## sum(apply(nba[,x],2,is.nan)
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
is.na(nba[,x])
}
##table(is.null(nba[,x]))
## sum(apply(nba[,x],2,is.nan)
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
print(is.na(nba[,x]))
}
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
print(table(is.na(nba[,x])))
}
##table(is.null(nba[,x]))
## sum(apply(nba[,x],2,is.nan)
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
print(
str(table(is.na(nba[,x]))))
}
##table(is.null(nba[,x]))
## sum(apply(nba[,x],2,is.nan)
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
print(table(is.na(nba[,x])))
}
##table(is.null(nba[,x]))
## sum(apply(nba[,x],2,is.nan)
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
print(table(is.na(nba[,x])) ### Reviso los valores NA y agrupo, para las 6 columnas obtengo False 1145, por lo que no hay NA
print(table(is.null(nba[,x])))
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
print(table(is.na(nba[,x]))) ### Reviso los valores NA y agrupo, para las 6 columnas obtengo False 1145, por lo que no hay NA
print(table(is.null(nba[,x]))
)
}
##table(is.null(nba[,x]))
## sum(apply(nba[,x],2,is.nan)
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
print(table(is.na(nba[,x]))) ### Reviso los valores NA y agrupo, para las 6 columnas obtengo False 1145, por lo que no hay NA
)
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
print(table(is.na(nba[,x]))) ### Reviso los valores NA y agrupo, para las 6 columnas obtengo False 1145, por lo que no hay NA
}
##table(is.null(nba[,x]))
## sum(apply(nba[,x],2,is.nan)
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
print(x) print(table(is.na(nba[,x]))) ### Reviso los valores NA y agrupo, para las 6 columnas obtengo False 1145, por lo que no hay NA
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
print(x) + print(table(is.na(nba[,x]))) ### Reviso los valores NA y agrupo, para las 6 columnas obtengo False 1145, por lo que no hay NA
print(table(is.null(nba[,x])))
}
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
print(x) + print(table(is.na(nba[,x]))) ### Reviso los valores NA y agrupo, para las 6 columnas obtengo False 1145, por lo que no hay NA
}
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
print(table(is.na(nba[,x]))) ### Reviso los valores NA y agrupo, para las 6 columnas obtengo False 1145, por lo que no hay NA
}
##table(is.null(nba[,x]))
## sum(apply(nba[,x],2,is.nan)
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
### Reviso los valores NA y agrupo, para las 6 columnas obtengo False 1145, por lo que no hay NA
for (x in Vartofact){
print(table(is.na(nba[,x])))
}
for (x in Vartofact){
print(table(is.null(nba[,x])))
}
##table(is.null(nba[,x]))
## sum(apply(nba[,x],2,is.nan)
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
### Reviso los valores NA y agrupo, para las 6 columnas obtengo False 1145, por lo que no hay NA
for (x in Vartofact){
print(x)+ print(table(is.na(nba[,x])))
}
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
### Reviso los valores NA y agrupo, para las 6 columnas obtengo False 1145, por lo que no hay NA
for (x in Vartofact){
print(x)+ print(str(table(is.na(nba[,x]))))
}
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
### Reviso los valores NA y agrupo, para las 6 columnas obtengo False 1145, por lo que no hay NA
for (x in Vartofact){
print(str(table(is.na(nba[,x]))))
}
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
### Reviso los valores NA y agrupo, para las 6 columnas obtengo False 1145, por lo que no hay NA
for (x in Vartofact){
print(str(x + table(is.na(nba[,x]))))
}
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
### Reviso los valores NA y agrupo, para las 6 columnas obtengo False 1145, por lo que no hay NA
for (x in Vartofact){
print(str(x & table(is.na(nba[,x]))))
}
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
### Reviso los valores NA y agrupo, para las 6 columnas obtengo False 1145, por lo que no hay NA
for (x in Vartofact){
print(x + str(table(is.na(nba[,x]))))
}
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
### Reviso los valores NA y agrupo, para las 6 columnas obtengo False 1145, por lo que no hay NA
for (x in Vartofact){
print(table(is.na(nba[,x])))
}
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
### Reviso los valores NA y agrupo, para las 6 columnas obtengo False 1145, por lo que no hay NA
for (x in Vartofact){
print(x)
print(table(is.na(nba[,x])))
}
for (x in Vartofact){
print(x)
print(table(is.null(nba[,x])))
}
##table(is.null(nba[,x]))
## sum(apply(nba[,x],2,is.nan)
### Reviso los valores null y agrupo, para las 6 columnas obtengo False 1, por lo que no hay null
for (x in Vartofact){
print(x)
print(sum(apply(nba[,x],2,is.nan)))
}
# Cargamos el juego de datos
datosAdult <- read.csv('http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',stringsAsFactors = FALSE, header = FALSE)
# Nombres de los atributos
names(datosAdult) <- c("age","workclass","fnlwgt","education","education-num","marital-status","occupation","relationship","race","sex","capital-gain","capital-loss","hour-per-week","native-country","income")
library(dplyr)
library(tidyverse)
filas= c(1:nrow(datosAdult)) ## Cambio está linea, así crea un rango para hacer el for.
E18=c(" Preschool"," 1st-4th"," 5th-6th"," 7th-8th"," 9th"," 10th" ," 11th"," 12th")
E912=c(" HS-grad"," Some-college"," Assoc-acdm"," Assoc-voc")
E1316=c(" Bachelors"," Masters" ," Prof-school"," Doctorate")
datosAdult <- mutate(datosAdult, EdLevel = '')
for (i in filas){ ## Modifico un poco este código, no quiero perder los valores originales por si fueran útiles en otro momento. Entiendo que se corresponden con niveles bajos, medios y altos de educación.
if (datosAdult$education[i] %in% E18==TRUE){
datosAdult$EdLevel[i]= "E18 - Low"
} else if(datosAdult$education[i] %in% E912==TRUE){
datosAdult$EdLevel[i]= "E912 - Medium"
} else if (datosAdult$education[i] %in% E1316==TRUE){
datosAdult$EdLevel[i]= "E1316 - High"
}
}
rm(filas ,E18, E912, E1316)
## Reviso que el Dataframe no tiene campos vaciós, NA ni NULL
sum(apply(datosAdult$age,2,is.nan))
## Reviso que el Dataframe no tiene campos vaciós, NA ni NULL
sum(apply(datosAdult,2,is.nan))
### Reviso los valores null y agrupo, para las 6 columnas obtengo False 1, por lo que no hay null
print(sum(apply(nba,2,is.nan)))
View(nba)
nba['Tiempo'] <- nba['Season.short']-nba['Draft.Year']
View(datosAdult)
mfv(nba$Tiempo)
Mfv(nba$Tiempo)
mean(nba$Tiempo)
mean(nba$Tiempo)
which.max(nba$Tiempo)
mean(nba$Tiempo)
moda <- table(nba$Tiempo)
mean(nba$Tiempo)
table(nba$Tiempo)
mean(nba$Tiempo)
moda = table(nba$Tiempo)
mean(nba$Tiempo)
moda <- table(nba$Tiempo)
mean(nba$Tiempo)
moda <- table(nba['Tiempo'])
mean(nba$Tiempo)
table(nba['Tiempo'])
mean(nba$Tiempo)
table(nba['Tiempo'])
print(moda)
mean(nba$Tiempo)
moda <- data.frame(table(nba['Tiempo']))
View(moda)
View(moda)
View(moda)
mean(nba$Tiempo)
moda <- data.frame(table(nba['Tiempo']))
moda <- select(moda,Tiempo==max(moda$Tiempo))
mean(nba$Tiempo)
moda <- data.frame(table(nba['Tiempo']))
moda <- filter(moda,Tiempo==max(moda$Tiempo))
mean(nba$Tiempo)
moda <- data.frame(table(nba['Tiempo']))
moda <- filter(moda,Tiempo==max(moda$Tiempo))
View(moda)
mean(nba$Tiempo)
moda <- data.frame(table(nba['Tiempo']))
##moda <- filter(moda,Tiempo==max(moda$Tiempo))
View(moda)
View(moda)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(stringr)
nba<-read.csv("NBA_player_of_the_week.csv",header = TRUE)
class(nba)
str(nba)
head(nba,6)
ls(nba)
names(nba)
row.names(nba)
levels(nba$Conference)
table(nba$Conference)
conf<-unique(nba$Conference)
conf
conf = select(nba, Conference,Team) %>% filter(Conference!='') %>% distinct() ## Damos por hecho que los equipos siempre han estado en la misma conferencia, así que creamos un dataframe con conferencia y equipo, eliminamos los valores en blanco y después los duplicados para tener los datos sólo una vez
i=1
for (i in c(1:nrow(conf))){
nba <- mutate(nba,Conference= if_else(Conference=='' & Team==conf[i,2]
,conf[i,1]
,Conference)
)
}
## Comprobamos que todo ha hay un 0.7% de Equipos sin conferencia
round(table(nba$Conference)/length(nba$Conference)*100,1)
rm(conf,i)
##• Hago una busqueda para comprobar los equipos sin conferencia, el equipo son los washington bullets.
select(nba, Conference,Team) %>% filter(Conference=='') %>% distinct()
## Para saber a que asignarlo busco otros posibles equipos de washington
select(nba, Conference,Team) %>% filter(str_detect(Team,"Washington")) %>% distinct()
## encuentro que hay otro equipo de Washington y que corresponde a la conferencia este
nba <- mutate(nba,Conference= if_else(Conference==''
,'East'
,Conference
)
)
## Revisamos que todos los equipos tengan la conferencia asignada
round(table(nba$Conference)/length(nba$Conference)*100,1)
nba$Conference <- as.factor(nba$Conference)
str(nba['Conference'])
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
for (x in Vartofact){
nba[,x] <- as.factor(nba[,x])
str(nba[,x])
}
rm(Vartofact )
Vartofact <- c('Height' , 'Player' , 'Position' , 'Season' , 'Team' , 'Weight')
### Reviso los valores NA y agrupo, para las 6 columnas obtengo False 1145, por lo que no hay NA
for (x in Vartofact){
print(x)
print(table(is.na(nba[,x])))
}
### Reviso los valores null y agrupo, para las 6 columnas obtengo False 1, por lo que no hay null
for (x in Vartofact){
print(x)
print(table(is.null(nba[,x])))
}
### Reviso que no haya NANs, obtengo un total de 0 así que no hay ninguno, prosigo
print(sum(apply(nba,2,is.nan)))
nba['Tiempo'] <- nba['Season.short']-nba['Draft.Year']
View(moda)
View(moda)
View(moda)
mean(nba$Tiempo)
moda <- filter(moda,Tiempo==max(moda$Tiempo))
mean(nba$Tiempo)
moda <- filter(nba,Tiempo==max(moda$Tiempo))
# moda <- data.frame(table(nba['Tiempo']))
View(moda)
View(moda)
View(datosAdult)
View(nba)
mean(nba$Tiempo)
moda <- filter(nba,Tiempo)
mean(nba$Tiempo)
moda <- Select(nba,Tiempo)
moda <- nba$Tiempo
mean(nba$Tiempo)
moda <- nba$Tiempo
moda <- table(nba$Tiempo)
mean(nba$Tiempo)
moda <- data.frame(table(nba$Tiempo))
View(moda)
View(moda)
View(moda)
filter(moda,Freq==max(moda$Freq))
mean(nba$Tiempo)
moda <- data.frame(table(nba$Tiempo))
moda <- filter(moda,Freq==max(moda$Freq))
print(moda)
which.max(moda$Freq)
## 7 años es el valor que más se repite con una frecuencia de 141
moda <- data.frame(table(nba$Tiempo))
moda <- filter(moda,Freq==max(moda$Freq))
print(moda)
moda <- table(nba$Tiempo)
which.max(moda$Freq)
## 7 años es el valor que más se repite con una frecuencia de 141
moda <- data.frame(table(nba$Tiempo))
moda <- filter(moda,Freq==max(moda$Freq))
print(moda)
moda <- table(nba$Tiempo)
which.max(moda)
## 7 años es el valor que más se repite con una frecuencia de 141
#moda <- data.frame(table(nba$Tiempo))
#moda <- filter(moda,Freq==max(moda$Freq))
#print(moda)
moda <- table(nba$Tiempo)
which.max(moda)
## 7 años es el valor que más se repite con una frecuencia de 141
#moda <- data.frame(table(nba$Tiempo))
#moda <- filter(moda,Freq==max(moda$Freq))
#print(moda)
moda <- table(nba$Tiempo)
which.max(moda)
## 7 años es el valor que más se repite con una frecuencia de 141
#moda <- data.frame(table(nba$Tiempo))
#moda <- filter(moda,Freq==max(moda$Freq))
#print(moda)
## moda <- table(nba$Tiempo)
which.max(moda)
## 7 años es el valor que más se repite con una frecuencia de 141
#moda <- data.frame(table(nba$Tiempo))
#moda <- filter(moda,Freq==max(moda$Freq))
#print(moda)
## moda <- table(nba$Tiempo)
print(moda)
which.max(moda)
## 7 años es el valor que más se repite con una frecuencia de 141
#moda <- data.frame(table(nba$Tiempo))
#moda <- filter(moda,Freq==max(moda$Freq))
#print(moda)
## moda <- table(nba$Tiempo)
print(moda[which.max(moda)])
which.max(moda)
7 años es el valor que más se repite con una frecuencia de 141
# años es el valor que más se repite con una frecuencia de 141
moda <- table(nba$Tiempo)
pmoda[which.max(moda)]
# años es el valor que más se repite con una frecuencia de 141
moda <- table(nba$Tiempo)
moda[which.max(moda)]
View(nba)
NBACM <- filter(nba,str_detect(Height,"cm"))
View(NBACM)
## Creo dos Dataframes, uno con CM y otro con pies posteriormente hago un calculo para comprobar que todas las líneas están incluidas.
NBACM <- filter(nba,str_detect(Height,"cm"))
NBAFT <- filter(nba,str_detect(Height,"-"))
## Creo dos Dataframes, uno con CM y otro con pies posteriormente hago un calculo para comprobar que todas las líneas están incluidas.
NBACM <- filter(nba,str_detect(Height,"cm"))
NBAFT <- filter(nba,str_detect(Height,"-"))
len(nba)-len(NBACM)-len(NBAFT)
## Creo dos Dataframes, uno con CM y otro con pies posteriormente hago un calculo para comprobar que todas las líneas están incluidas.
NBACM <- filter(nba,str_detect(Height,"cm"))
NBAFT <- filter(nba,str_detect(Height,"-"))
length(nba)-length(NBACM)-length(NBAFT)
## Creo dos Dataframes, uno con CM y otro con pies posteriormente hago un calculo para comprobar que todas las líneas están incluidas.
NBACM <- filter(nba,str_detect(Height,"cm"))
NBAFT <- filter(nba,str_detect(Height,"-"))
length(nba)
## Creo dos Dataframes, uno con CM y otro con pies posteriormente hago un calculo para comprobar que todas las líneas están incluidas.
NBACM <- filter(nba,str_detect(Height,"cm"))
NBAFT <- filter(nba,str_detect(Height,"-"))
nrow(nba)-nrow(NBACM)-nrow(NBAFT)
View(NBAFT)
unique(nba$Team)
count(unique(nba$Team))
length(unique(nba$Team)
unique(nba$Team)
r =unique(nba$Team)
r =unique(nba$Team)
length(r)
length(unique(nba$Team))
