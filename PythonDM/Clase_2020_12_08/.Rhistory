knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
gc()
cat("\014")
read.csv('Pokemon.csv')
PDF <- read.csv('Pokemon.csv')
View(PDF)
View(PDF)
library(ggplot2)
PDF <- read.csv('Pokemon.csv')
library(ggplot2)
PDF <- read.csv('Pokemon.csv')
ggplot(data= PDF, aes(x=Type.1))
library(ggplot2)
PDF <- read.csv('Pokemon.csv')
ggplot(data= PDF, aes(x=Type.1,y=generation)) + geom_point()
library(ggplot2)
PDF <- read.csv('Pokemon.csv')
ggplot(data= PDF, aes(x=Type.1,y=Generation)) + geom_point()
library(ggplot2)
PDF <- read.csv('Pokemon.csv')
ggplot(data= PDF, aes(x=Type.1,y=Generation)) + geom_bar()
library(ggplot2)
PDF <- read.csv('Pokemon.csv')
ggplot(data= PDF, aes(x=Type.1)) + geom_line()
library(ggplot2)
PDF <- read.csv('Pokemon.csv')
hist(PDF$Type.1)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
View(PDF)
View(PDFC)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
View(PDF)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Generation))
#facet_wrap(drv ~cyl)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Generation)) + geom_bar()
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Generation))
#facet_wrap(drv ~cyl)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Generation)) +facet_grid(Generation)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Generation))
#facet_wrap(drv ~cyl)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_bar(mapping = aes(x = Type.1, y = Generation))
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Generation))
#facet_wrap(drv ~cyl)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total))
#facet_wrap(drv ~cyl)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total),fill=Generation)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total,color=Generation))
#facet_wrap(drv ~cyl)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total,color=Generation, shape = Generation))
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total,color=Generation))
#facet_wrap(drv ~cyl)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total,color=Generation,shape=Type.2))
#facet_wrap(drv ~cyl)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total,shape=Type.2))+facet_grid(Generation)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total,shape=Type.2))+facet_grid(rows=Generation)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total,shape=Type.2))
#facet_wrap(drv ~cyl)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total,color=Generation,shape=Type.2))
#facet_wrap(drv ~cyl)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total,color=Generation,shape=Type.2))+facet_wrap(Generation~Legendary)
#facet_wrap(drv ~cyl)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total,color=Generation,shape=Type.2))+facet_wrap(Generation)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total,color=Generation,shape=Type.2))+facet_wrap(Generation~Legendary)
#facet_wrap(drv ~cyl)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
PDF['napa'] <- '0'
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total,color=Generation,shape=Type.2))+facet_wrap(Generation~napa)
#facet_wrap(drv ~cyl)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
PDF['napa'] <- '0'
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total,color=Generation,shape=Type.2))+facet_grid(Generation~napa)
#facet_wrap(drv ~cyl)
table(PDF$Generation,PDF&Total)
table(PDF$Generation,PDF$Total)
table(PDF$Generation,PDF$Type)
table(PDF$Generation,PDF$Type.1)
names(PDF)
Matcor <- cor(PDF[,c("Total","HP","Attack","Defense","Sp..Atk","Sp..Def","Speed","Generation","Legendary")])
# creo una matriz de correlación
Matcor <- cor(PDF[,c("Total","HP","Attack","Defense","Sp..Atk","Sp..Def","Speed","Generation")])
melted_Matcor <- melt(Matcor)
library(stats)
# creo una matriz de correlación
Matcor <- cor(PDF[,c("Total","HP","Attack","Defense","Sp..Atk","Sp..Def","Speed","Generation")])
melted_Matcor <- melt(Matcor)
library(reshape2)
library(reshape2)
Matcor <- cor(PDF[,c("Total","HP","Attack","Defense","Sp..Atk","Sp..Def","Speed","Generation")])
melted_Matcor <- melt(Matcor)
library(ggplot2)
ggplot(data = melted_Matcor, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
