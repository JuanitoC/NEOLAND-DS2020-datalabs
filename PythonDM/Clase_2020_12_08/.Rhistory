ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total,color=Generation,shape=Type.2))+facet_grid(Generation~napa)
library(ggplot2)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
PDF['napa'] <- '0'
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total,color=Generation,shape=Type.2))+facet_grid(Generation~napa)
#facet_wrap(drv ~cyl)
# Tabla
table(PDF$Generation,PDF$Type.1)
library(stats)
library(reshape2)
# creo una matriz de correlación
Matcor <- cor(PDF[,c("Total","HP","Attack","Defense","Sp..Atk","Sp..Def","Speed","Generation")])
melted_Matcor <- melt(Matcor)
library(ggplot2)
ggplot(data = melted_Matcor, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
gc()
cat("\014")
library(ggplot2)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
PDF['napa'] <- '0'
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total,color=Generation,shape=Type.2))+facet_grid(Generation~napa)
#facet_wrap(drv ~cyl)
library(stats)
library(reshape2)
# creo una matriz de correlación
Matcor <- cor(PDF[,c("Total","HP","Attack","Defense","Sp..Atk","Sp..Def","Speed","Generation")])
melted_Matcor <- melt(Matcor)
library(ggplot2)
ggplot(data = melted_Matcor, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
gc()
cat("\014")
library(ggplot2)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
PDF['napa'] <- '0'
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total,color=Generation,shape=Type.2))+facet_grid(Generation~napa)
#facet_wrap(drv ~cyl)
library(stats)
library(reshape2)
# creo una matriz de correlación
Matcor <- cor(PDF[,c("Total","HP","Attack","Defense","Sp..Atk","Sp..Def","Speed","Generation")])
melted_Matcor <- melt(Matcor)
library(ggplot2)
ggplot(data = melted_Matcor, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
library(stats)
library(reshape2)
# creo una matriz de correlación
Matcor <- cor(PDF[,c("Total","HP","Attack","Defense","Sp..Atk","Sp..Def","Speed","Generation")])
melted_Matcor <- melt(Matcor)
library(ggplot2)
ggplot(data = melted_Matcor, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
library(stats)
library(reshape2)
# creo una matriz de correlación
Matcor <- cor(PDF[,c("Total","HP","Attack","Defense","Sp..Atk","Sp..Def","Speed")])
melted_Matcor <- melt(Matcor)
library(ggplot2)
ggplot(data = melted_Matcor, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
gc()
cat("\014")
## Esta matriz da poca información, y es poco visual así que creo una matriz en la sólo figuren las correlaciones fuertes.
melted_Matcor['Value2'] = 0
## Esta matriz da poca información, y es poco visual así que creo una matriz en la sólo figuren las correlaciones fuertes.
melted_Matcor['Value2'] = 0
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
gc()
cat("\014")
library(ggplot2)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
PDF['napa'] <- '0'
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1, y = Total,color=Generation,shape=Type.2))+facet_grid(Generation~napa)
#facet_wrap(drv ~cyl)
library(stats)
library(reshape2)
# creo una matriz de correlación
Matcor <- cor(PDF[,c("Total","HP","Attack","Defense","Sp..Atk","Sp..Def","Speed")])
melted_Matcor <- melt(Matcor)
library(ggplot2)
ggplot(data = melted_Matcor, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
## Esta matriz da poca información, y es poco visual así que creo una matriz en la sólo figuren las correlaciones fuertes.
melted_Matcor['Value2'] = 0
melted_Matcorpos <- melted_Matcor %>% mutate (Value2 = ifelse(value %in% -0.70:0.70,0,Value2),
Value2 = ifelse(value < -0.70,-1,Value2),
Value2 = ifelse(value > 0.70,1,Value2)
)
library(ggplot2)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
PDF['napa'] <- '0'
ggplot(data = PDF)+
geom_point(mapping = aes(x = Type.1 ,color=Generation,shape=Type.2))+facet_grid(Generation~napa)
library(ggplot2)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
PDF['napa'] <- '0'
ggplot(data = PDF)+
geom_bar(mapping = aes(x = Type.1 ,color=Generation,shape=Type.2))+facet_grid(Generation~napa)
#facet_wrap(drv ~cyl)
library(ggplot2)
PDF <- read.csv('Pokemon.csv')
PDFC <- read.csv('pokemon_go_captures.csv')
summary(PDF)
PDF['napa'] <- '0'
ggplot(data = PDF)+
geom_bar(mapping = aes(x = Type.1,shape=Type.2))+facet_grid(Generation~napa)
#facet_wrap(drv ~cyl)
View(PDFC)
View(PDF)
rm(list=ls())
gc()
cat("\014")
### Rutas que vamos a utilizar
ruta <- ''
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
### Rutas que vamos a utilizar
ruta <- 'C:/Users/JD/DL2020'
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
###
list.files(ruta)[4]
### Rutas que vamos a utilizar
ruta <- 'C:/Users/JD/DL2020'
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
###
list.files(ruta)[5]
### Rutas que vamos a utilizar
ruta <- 'C:/Users/JD/DL2020'
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
###
list.files(ruta)
### Rutas que vamos a utilizar
ruta <- 'C:/Users/JD/DL2020'
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
###
list.files(ruta)
data <- read.csv(file.path(ruta,"Peliculas.csv"))
### Rutas que vamos a utilizar
ruta <- 'C:/Users/JD/DL2020'
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
###
list.files(ruta)
data <- read.csv(file.path(ruta,"Peliculas.csv"))
rm(list=ls()) # Borrar memoria
gc() # Vaciar el Garbage Colector
cat("\014") ## Borro la consola
### Rutas que vamos a utilizar
ruta <- 'C:/Users/JD/DL2020'
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
###
list.files(ruta)
data <- read.csv(file.path(ruta,"Peliculas.csv"))
MODA <- function(x){
moda <- unique(x)
moda[which.max(tabulatemath/x,moda)))]
### Rutas que vamos a utilizar
ruta <- 'C:/Users/JD/DL2020'
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
###
list.files(ruta)
data <- read.csv(file.path(ruta,"Peliculas.csv"))
MODA <- function(x){
moda <- unique(x)
moda[which.max(tabulatemath/x,moda)))]
View[data]
data <- read.csv(file.path(ruta,"Peliculas.csv"),sep=',',dec='.')
MODA <- function(x){
moda <- unique(x)
moda[which.max(tabulatemath/x,moda)))]
### Rutas que vamos a utilizar
ruta <- 'C:/Users/JD/DL2020'
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
###
list.files(ruta)
data <- read.csv(file.path(ruta,"Peliculas.csv"),sep=',',dec='.')
MODA <- function(x){
moda <- unique(x)
moda[which.max(tabulate(match(x,moda)))]
}
View[data]
View(data)
class(data)
glipse(data)
glimpse(data)
class(data)
summary(data)
summary(data)
str(data)
glimpse(data)
### Rutas que vamos a utilizar
ruta <- 'C:/Users/JD/DL2020'
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
###
list.files(ruta)
data <- read.csv(file.path(ruta,"Peliculas.csv"),sep=',',dec='.')
MODA <- function(x){
moda <- unique(x)
moda[which.max(tabulate(match(x,moda)))]
}
Resumen <- function(x){
print(class(data))
print(summary(data))
## str(data)
print(glimpse(data))
print(colnames(data))
}
Resumen(data)
### Rutas que vamos a utilizar
ruta <- 'C:/Users/JD/DL2020'
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
###
list.files(ruta)
data <- read.csv(file.path(ruta,"Peliculas.csv"),sep=',',dec='.')
MODA <- function(x){
moda <- unique(x)
moda[which.max(tabulate(match(x,moda)))]
}
Resumen <- function(x){
print("CLASS")
print(class(data))
print("SUMMARY")
print(summary(data))
## str(data)
print("GLIMPSE")
print(glimpse(data))
print("COLNAMES")
print(colnames(data))
}
Resumen(data)
### Rutas que vamos a utilizar
ruta <- 'C:/Users/JD/DL2020'
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
###
list.files(ruta)
data <- read.csv(file.path(ruta,"Peliculas.csv"),sep=',',dec='.')
source(file.path(ruta,"Funciones_recurrentes"))
### Rutas que vamos a utilizar
ruta <- 'C:/Users/JD/DL2020'
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
###
list.files(ruta)
data <- read.csv(file.path(ruta,"Peliculas.csv"),sep=',',dec='.')
source(file.path(ruta,"Funciones_recurrentes.R"))
Resumen(data)
### Rutas que vamos a utilizar
ruta <- 'C:/Users/JD/DL2020'
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
###
list.files(ruta)
data <- read.csv(file.path(ruta,"Peliculas.csv"),sep=',',dec='.')
source(file.path(ruta,"Funciones_recurrentes.R"))
Resumen(data)
data$domgross_1 <- as.numeric(paste(data$domgross))
### Rutas que vamos a utilizar
ruta <- 'C:/Users/JD/DL2020'
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
###
list.files(ruta)
data <- read.csv(file.path(ruta,"Peliculas.csv"),sep=',',dec='.')
source(file.path(ruta,"Funciones_recurrentes.R"))
Resumen(data)
data$domgross_1 <- as.numeric(paste(data$domgross))
data1 <- data %>% mutate(domgross=as.numeric(paste(data$domgross)),
intgross=as.numeric(paste(data$domgross)),
domgross_2013.=as.numeric(paste(domgross_2013.)),
intgross_2013.=as.numeric(paste(intgross_2013)),
) %>% select(-domgross_1)
View(data)
### Rutas que vamos a utilizar
ruta <- 'C:/Users/JD/DL2020'
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
###
list.files(ruta)
data <- read.csv(file.path(ruta,"Peliculas.csv"),sep=',',dec='.')
source(file.path(ruta,"Funciones_recurrentes.R"))
Resumen(data)
data$domgross_1 <- as.numeric(paste(data$domgross))
data1 <- data %>% mutate(domgross=as.numeric(paste(data$domgross)),
intgross=as.numeric(paste(data$intgross)),
domgross_2013.=as.numeric(paste(domgross_2013.)),
intgross_2013.=as.numeric(paste(intgross_2013.)),
) %>% select(-domgross_1)
rm(list=ls()) # Borrar memoria
gc() # Vaciar el Garbage Colector
cat("\014") ## Borro la consola
### Rutas que vamos a utilizar
ruta <- 'C:/Users/JD/DL2020'
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
###
list.files(ruta)
data <- read.csv(file.path(ruta,"Peliculas.csv"),sep=',',dec='.')
source(file.path(ruta,"Funciones_recurrentes.R"))
data$domgross_1 <- as.numeric(paste(data$domgross))
data<- data %>% mutate(domgross=as.numeric(paste(data$domgross)),
intgross=as.numeric(paste(data$intgross)),
domgross_2013.=as.numeric(paste(domgross_2013.)),
intgross_2013.=as.numeric(paste(intgross_2013.)),
) %>% select(-domgross_1)
rm(data1)
Resumen(data)
### Rutas que vamos a utilizar
ruta <- 'C:/Users/JD/DL2020'
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
###
list.files(ruta)
data <- read.csv(file.path(ruta,"Peliculas.csv"),sep=',',dec='.')
source(file.path(ruta,"Funciones_recurrentes.R"))
data$domgross_1 <- as.numeric(paste(data$domgross))
data<- data %>% mutate(domgross=as.numeric(paste(data$domgross)),
intgross=as.numeric(paste(data$intgross)),
domgross_2013.=as.numeric(paste(domgross_2013.)),
intgross_2013.=as.numeric(paste(intgross_2013.)),
) %>% select(-domgross_1)
rm(data1)
Resumen(data)
sum(is.na(data$code))
### Rutas que vamos a utilizar
ruta <- 'C:/Users/JD/DL2020'
#### Librerias
library(dplyr)
library(lubridate)
library(ggplot2)
###
list.files(ruta)
data <- read.csv(file.path(ruta,"Peliculas.csv"),sep=',',dec='.')
source(file.path(ruta,"Funciones_recurrentes.R"))
data$domgross_1 <- as.numeric(paste(data$domgross))
data<- data %>% mutate(domgross=as.numeric(paste(data$domgross)),
intgross=as.numeric(paste(data$intgross)),
domgross_2013.=as.numeric(paste(domgross_2013.)),
intgross_2013.=as.numeric(paste(intgross_2013.)),
) %>% select(-domgross_1)
rm(data1)
Resumen(data)
sum(is.na(data$code))/nrow(data)
sum(is.na(data$code))/nrow(data)
source(file.path(ruta,"Funciones_recurrentes.R"))
apply(data,2,valores_missing)
source(file.path(ruta,"Funciones_recurrentes.R"))
apply(data,2,valores_missing)
cat("\n El tipo de la variable",names(data)[i]," es: ",)
for(i in 1:2) {
tipo_variable[i] = class(data[1,i])
cat("\n El tipo de la variable",names(data)[i]," es: ",)
}
tipo_variable <- vector()
for(i in 1:ncol(data)) {
tipo_variable[i] = class(data[1,i])
cat("\n El tipo de la variable",names(data)[i]," es: ",)
}
tipo_variable[i] = class(data[1,i])
tipo_variable <- vector()
for(i in 1:ncol(data)) {
tipo_variable[i] = class(data[1,i])
cat("\n El tipo de la variable",names(data)[i]," es: ",tipo_variable)
}
cat("\n El tipo de la variable",names(data)[i]," es: ",tipo_variable[i])
for(i in 1:ncol(data)) {
tipo_variable[i] = class(data[1,i])
cat("\n El tipo de la variable",names(data)[i]," es: ",tipo_variable[i])
}
code_year <- as.numeric(substr(data$code)),1,4)
code_binary <- as.numeric(substr(data$code,5,8))
code_year <- as.numeric(substr(data$code,1,4))
code_binary <- as.numeric(substr(data$code,5,8))
table(data$year,code_year))
code_year <- as.numeric(substr(data$code,1,4))
code_binary <- as.numeric(substr(data$code,5,8))
table(data$year,code_year))
table(data$year,code_year)
diag(table(data$year,code_year))
sum(diag(table(data$year,code_year)))
sum(diag(table(data$year,code_year)))==nrow(data)
sum(diag(table(data$year,code_year)))-nrow(data)## Diferencia de 3, hay 3 NA
plot(code_year,data$year,type='l')
plot(code_year,data$year,type='b')
plot(code_year,data$year,type='d')
plot(code_year,data$year,type='l')
plot(as.numeric(code_binary),as.numeric(data$binary),type='b')
plot(as.numeric(code_binary),as.numeric(data$binary),type='b')
table(code_binary,data$binary,usena= 'ifany')
table(Binario= code_binary,data= data$binary,usena= 'ifany')
table(Binario= code_binary,data= data$binary,useNA= 'ifany')
code_binary <- as.character(substr(data$code,5,8))
table(Binario= code_binary,data= data$binary,useNA= 'ifany')
code_binary
code_binaryDF <- data[is.na(code)]
code_binaryDF <- data[is.na('code')]
View(code_binaryDF)
code_binaryDF <- data[data[is.na('code')]]
code_binaryDF <- filter(data,is.na(code))
View(code_binaryDF)
data <- data %>%
mutate(code=ifelse(is.na(code),
paste0(year,binary),
paste(code)))%>%
select(-code)
View(data)
View(data)
sum(is.na(data$period.code))
sum(is.na(data$decade.code))
plot(data$year,data$period.code,type='b')
plot(data$year,data$period.code,type='l')
plot(data$year,data$period.code,type='b')
table(data$year,data$period.code)
sss <- table(data$year,data$period.code)
sss <- as.data.frame(table(data$year,data$period.code))
View(sss)
sss <- sss %>% filter(Freq!=0)
View(sss)
data1 <- data %>%
mutate(period.code=ifelse(is.na(period.code) &year>=1985 & year<1990, 6,period.code),
period.code=ifelse(is.na(period.code) &year>=1980 & year<1985,7,period.code),
period.code=ifelse(is.na(period.code) &year>=1975 & year<1980,8,period.code),
period.code=ifelse(is.na(period.code) &year>=1970 & year<1975, 9,period.code)
)
View(data1)
data2 <- data1 %>%
mutate(decade.code=ifelse(is.na(decade.code), substr(data$year,3,4),decade.code)
)
View(data2)
View(data2)
data1 <- data %>%
mutate(period.code=ifelse(is.na(period.code) &year>=1985 & year<1990, 6,period.code),
period.code=ifelse(is.na(period.code) &year>=1980 & year<1985,7,period.code),
period.code=ifelse(is.na(period.code) &year>=1975 & year<1980,8,period.code),
period.code=ifelse(is.na(period.code) &year>=1970 & year<1975, 9,period.code)
)
data2 <- data1 %>%
mutate(decade.code=ifelse(is.na(decade.code), substr(data$year,3,3),decade.code)
)
View(data)
View(data)
