# Creo un dataset con las estaciones y me dispongo a visualizar su posición en el mapa
Estaciones <- dataset_gijon %>% select(EstacionID,EstacionName,Lat,Lon) %>% distinct()
leaflet() %>%
addTiles() %>%
addMarkers(lng=dataset_gijon$Lon, lat=dataset_gijon$Lat, popup = dataset_gijon$EstacionName)
rm(Estaciones)
## Tengo 17 registros por día y no se especifica la hora, por ello calculo la media de las variables relacionadas con las sustancias emitidas por los procesos de combustión
DatasetAgrupado <- dataset_gijon %>%
filter(Fecha_UTC>'2016-01-01')%>%
group_by(EstacionName,Fecha_UTC) %>%
summarise(
CO = mean(CO),
SO2 = mean(SO2),
NO = mean(NO),
NO2 = mean(NO2),
TOL =mean(TOL),
PM10=mean(PM10),
O3=mean(O3),
dd=mean(dd),
vv=mean(vv),
TMP=mean(TMP),
HR=mean(HR),
PRB=mean(PRB),
RS=mean(RS),
LL=mean(LL),
BEN=mean(BEN),
MXIL = mean(MXIL),
PM25 = mean(PM25)
)
# Grafico de C0
ggplot(data = DatasetAgrupado)+
ggtitle('CO')+
geom_line(mapping = aes(y = CO, x = Fecha_UTC,color =EstacionName))
# Grafico de S02
ggplot(data = DatasetAgrupado)+
ggtitle('SO2')+
geom_line(mapping = aes(y = SO2, x = Fecha_UTC,color =EstacionName))
# Grafico de NO2
ggplot(data = DatasetAgrupado)+
ggtitle('NO')+
geom_line(mapping = aes(y = NO, x = Fecha_UTC,color =EstacionName))
# Grafico de NO2
ggplot(data = DatasetAgrupado)+
ggtitle('NO2')+
geom_line(mapping = aes(y = NO2, x = Fecha_UTC,color =EstacionName))
# Grafico de TOL
ggplot(data = DatasetAgrupado)+
ggtitle('TOL')+
geom_line(mapping = aes(y = TOL, x = Fecha_UTC,color =EstacionName))
# Grafico de NO2
ggplot(data = DatasetAgrupado)+
ggtitle('MXIL')+
geom_line(mapping = aes(y = MXIL, x = Fecha_UTC,color =EstacionName))
# Grafico de NO2
ggplot(data = DatasetAgrupado)+
ggtitle('PM25')+
geom_line(mapping = aes(y = PM25, x = Fecha_UTC,color =EstacionName))
## Los valores de NO2 y NO bajan a la vez
# creo una matriz de correlación
Matcor <- cor(DatasetAgrupado[,c("SO2","NO","NO2","CO","PM10","O3","dd","vv",
"TMP","HR","PRB","RS","LL","BEN",
"TOL","MXIL","PM25")])
melted_Matcor <- melt(Matcor)
library(ggplot2)
ggplot(data = melted_Matcor, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
## Esta matriz da poca información, y es poco visual así que creo una matriz en la sólo figuren las correlaciones fuertes.
melted_Matcor['Value2'] = 0
melted_Matcorpos <- melted_Matcor %>% mutate (Value2 = ifelse(value %in% -0.70:0.70,0,Value2),
Value2 = ifelse(value < -0.70,-1,Value2),
Value2 = ifelse(value > 0.70,1,Value2)
)
ggplot(data = melted_Matcorpos, aes(x=Var1, y=Var2, fill=Value2)) +
ggtitle('Correlacion')+
geom_tile()
## Esta matriz da poca información, y es poco visual así que creo una matriz en la sólo figuren las correlaciones fuertes.
melted_Matcor['Value2'] = 0
melted_Matcorpos <- melted_Matcor %>% mutate (Value2 = ifelse(value %in% -0.70:0.70,0,Value2),
Value2 = ifelse(value < -0.70,-1,Value2),
Value2 = ifelse(value > 0.70,1,Value2)
)
ggplot(data = melted_Matcorpos, aes(x=Var1, y=Var2, fill=Value2)) +
ggtitle('Correlacion')+
geom_tile()
rm(Matcor,melted_Matcor,melted_Matcorpos)
boxplot(SO2~EstacionName, main = "Análisis de SO2",data= DatasetAgrupado)
boxplot(NO~EstacionName, main = "Análisis de NO",data= DatasetAgrupado)
boxplot(NO2~EstacionName, main = "Análisis de NO2",data= DatasetAgrupado)
boxplot(CO~EstacionName, main = "Análisis de CO",data= DatasetAgrupado)
boxplot(PM10~EstacionName, main = "Análisis de PM10",data= DatasetAgrupado)
boxplot(O3~EstacionName, main = "Análisis de O3",data= DatasetAgrupado)
boxplot(dd~EstacionName, main = "Análisis de dd",data= DatasetAgrupado)
boxplot(vv~EstacionName, main = "Análisis de vv",data= DatasetAgrupado)
boxplot(TMP~EstacionName, main = "Análisis de TMP",data= DatasetAgrupado)
boxplot(HR~EstacionName, main = "Análisis de HR",data= DatasetAgrupado)
boxplot(PRB~EstacionName, main = "Análisis de PRB",data= DatasetAgrupado)
boxplot(RS~EstacionName, main = "Análisis de RS",data= DatasetAgrupado)
boxplot(LL~EstacionName, main = "Análisis de LL",data= DatasetAgrupado)
boxplot(BEN~EstacionName, main = "Análisis de BEN",data= DatasetAgrupado)
boxplot(TOL~EstacionName, main = "Análisis de TOL",data= DatasetAgrupado)
boxplot(MXIL~EstacionName, main = "Análisis de MXIL",data= DatasetAgrupado)
boxplot(PM25~EstacionName, main = "Análisis de PM25",data= DatasetAgrupado)
table(DatasetAgrupado['CO'])
DF2 <- DatasetAgrupado #  %>%
# select('CO','EstacionName') %>%
# filter(EstacionName == 'Estación Avenida Argentina'|
#        EstacionName == 'Estación Avenida Castilla')
ANOVACO <- aov(CO~EstacionName,data = DF2)
DF2 <- DatasetAgrupado #  %>%
# select('CO','EstacionName') %>%
# filter(EstacionName == 'Estación Avenida Argentina'|
#        EstacionName == 'Estación Avenida Castilla')
ANOVACO <- aov(CO~EstacionName,data = DF2)
DF2 <- DatasetAgrupado #  %>%
# select('CO','EstacionName') %>%
# filter(EstacionName == 'Estación Avenida Argentina'|
#        EstacionName == 'Estación Avenida Castilla')
aovCO <- aov(CO~EstacionName,data = DF2)
aovCO
rm(ANOVACO)
aovCO
DF2 <- DatasetAgrupado #  %>%
# select('CO','EstacionName') %>%
# filter(EstacionName == 'Estación Avenida Argentina'|
#        EstacionName == 'Estación Avenida Castilla')
aovCO <- aov(CO~EstacionName,data = DF2)
aovCO
DF2 <- DatasetAgrupado #  %>%
# select('CO','EstacionName') %>%
# filter(EstacionName == 'Estación Avenida Argentina'|
#        EstacionName == 'Estación Avenida Castilla')
aov(CO~EstacionName,data = DF2)
# ANOVA de CO
aovCO <- aov(CO~EstacionName,data = DF2)
summary(aovCO)
# ANOVA de SO2
aovSO2 <- aov(SO2~EstacionName,data = DF2)
summary(aovSO2)
# ANOVA de SO2
aov(SO2~EstacionName,data = DF2)
# ANOVA de SO2
summary(aov(SO2~EstacionName,data = DF2))
s <- summary(aovCO)
View(s)
# Carga de las librerías
library(lubridate)
library(leaflet)
library(dplyr)
library(ggplot2)
library(reshape2)
library(stats)
#library(RColorBrewer)
#library(tidyr)
#library(fmsb)
# Creamos el dataset del fichero de las estaciones de Gijon de los últimos 7 días (actualizado a fecha 8 de abril)
# Observar si existe un formato fecha y time...para cálculo del time-series
dataset_gijon <- read.csv("http://opendata.gijon.es/descargar.php?id=1&tipo=CSV", encoding = 'UTF-8', stringsAsFactors = FALSE)
# Veamos los 10 primeros resultados
head(dataset_gijon[1:8], 10)
head(dataset_gijon[9:17], 10)
head(dataset_gijon[18:22], 10)
# Totalizamos los datos resultantes
dim(dataset_gijon)
# Realizamos una copia del dataset original y con un header personalizado sin caracteres especiales
datasetHeader <- c("EstacionID",
"EstacionName","Lat","Lon",
"Fecha_UTC","Periodo",
"SO2","NO","NO2","CO","PM10","O3","dd","vv",
"TMP","HR","PRB","RS","LL","BEN",
"TOL","MXIL","PM25"
)
colnames(dataset_gijon) <- c(datasetHeader)
# Analizamos las diferentes estaciones y las enumeramos
table(dataset_gijon$EstacionID)
table(dataset_gijon$EstacionName)
# Convertimos en categóricas la Estación o ID
dataset_gijon$EstacionID = as.numeric(dataset_gijon$EstacionID)
# Comprobamos nuevamente los resultados
str(dataset_gijon)
rm(datasetHeader)
# Comenzamos con la transformación de la columna fecha y su formato
# anyo = Y
# mes = m
# day = d
# Hour = H
# Minute = M
# Segundos = S
dataset_gijon$Fecha_UTC <- ymd(dataset_gijon$Fecha_UTC, tz = "Europe/Madrid")
dataset_gijon$Date <- format(dataset_gijon$Fecha_UTC, "%Y-%m-%d")
dataset_gijon$Time <- format(dataset_gijon$Fecha_UTC, "%T")
# Este formato tiene un formato calendar-time
# Alternativa con POSIXlt (lista de vectores y al parecer debería ser Human-friendly)
dataset_gijon$DatePOSIXlt <- as.POSIXlt(dataset_gijon$Date, format = "%Y-%m-%d")
# crear : day, month, year, hour, weekday, ...
# Busco valores NA: Sólo hay NA en los campos numéricos por lo que podemos entender que son valores a 0.
C = 1:ncol(dataset_gijon)
for (c in C){
print(names(dataset_gijon[c]))
print(table(is.na(dataset_gijon[,c])))
}
## Cambio los NA por 0
dataset_gijon[is.na(dataset_gijon)] <- 0
rm(C,c)
# Creo un dataset con las estaciones y me dispongo a visualizar su posición en el mapa
Estaciones <- dataset_gijon %>% select(EstacionID,EstacionName,Lat,Lon) %>% distinct()
leaflet() %>%
addTiles() %>%
addMarkers(lng=dataset_gijon$Lon, lat=dataset_gijon$Lat, popup = dataset_gijon$EstacionName)
rm(Estaciones)
## Tengo 17 registros por día y no se especifica la hora, por ello calculo la media de las variables relacionadas con las sustancias emitidas por los procesos de combustión
DatasetAgrupado <- dataset_gijon %>%
filter(Fecha_UTC>'2016-01-01')%>%
group_by(EstacionName,Fecha_UTC) %>%
summarise(
CO = mean(CO),
SO2 = mean(SO2),
NO = mean(NO),
NO2 = mean(NO2),
TOL =mean(TOL),
PM10=mean(PM10),
O3=mean(O3),
dd=mean(dd),
vv=mean(vv),
TMP=mean(TMP),
HR=mean(HR),
PRB=mean(PRB),
RS=mean(RS),
LL=mean(LL),
BEN=mean(BEN),
MXIL = mean(MXIL),
PM25 = mean(PM25)
)
# Grafico de C0
ggplot(data = DatasetAgrupado)+
ggtitle('CO')+
geom_line(mapping = aes(y = CO, x = Fecha_UTC,color =EstacionName))
# Grafico de S02
ggplot(data = DatasetAgrupado)+
ggtitle('SO2')+
geom_line(mapping = aes(y = SO2, x = Fecha_UTC,color =EstacionName))
# Grafico de NO2
ggplot(data = DatasetAgrupado)+
ggtitle('NO')+
geom_line(mapping = aes(y = NO, x = Fecha_UTC,color =EstacionName))
# Grafico de NO2
ggplot(data = DatasetAgrupado)+
ggtitle('NO2')+
geom_line(mapping = aes(y = NO2, x = Fecha_UTC,color =EstacionName))
# Grafico de TOL
ggplot(data = DatasetAgrupado)+
ggtitle('TOL')+
geom_line(mapping = aes(y = TOL, x = Fecha_UTC,color =EstacionName))
# Grafico de NO2
ggplot(data = DatasetAgrupado)+
ggtitle('MXIL')+
geom_line(mapping = aes(y = MXIL, x = Fecha_UTC,color =EstacionName))
# Grafico de NO2
ggplot(data = DatasetAgrupado)+
ggtitle('PM25')+
geom_line(mapping = aes(y = PM25, x = Fecha_UTC,color =EstacionName))
## Los valores de NO2 y NO bajan a la vez
# creo una matriz de correlación
Matcor <- cor(DatasetAgrupado[,c("SO2","NO","NO2","CO","PM10","O3","dd","vv",
"TMP","HR","PRB","RS","LL","BEN",
"TOL","MXIL","PM25")])
melted_Matcor <- melt(Matcor)
library(ggplot2)
ggplot(data = melted_Matcor, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
## Esta matriz da poca información, y es poco visual así que creo una matriz en la sólo figuren las correlaciones fuertes.
melted_Matcor['Value2'] = 0
melted_Matcorpos <- melted_Matcor %>% mutate (Value2 = ifelse(value %in% -0.70:0.70,0,Value2),
Value2 = ifelse(value < -0.70,-1,Value2),
Value2 = ifelse(value > 0.70,1,Value2)
)
ggplot(data = melted_Matcorpos, aes(x=Var1, y=Var2, fill=Value2)) +
ggtitle('Correlacion')+
geom_tile()
rm(Matcor,melted_Matcor,melted_Matcorpos)
# Principales correlaciones Correlaciones:
#   - No y NO2: Ambos son gases generados en los procesos de combustión
#   - TMP, HR, PRB: Temperatura, humedad y presión.
#   - BEN, TOL, MXIL: Las 3 son partículas generadas por emisión de gasolinas y uso de disolventes para pinturas, revestimientos,etc...
# Antes del Anova voy a lanzar unos whisker plots por estacion
# determino los valores de los que quiero el boxplot
#BP <- c("SO2","NO","NO2","CO","PM10","O3","dd","vv",
#                   "TMP","HR","PRB","RS","LL","BEN",
#                   "TOL","MXIL","PM25")
#for (x in BP){
#  boxplot(DatasetAgrupado[x]~DatasetAgrupado['EstacionName'], main = x )
#}
# En los whiskerplot se puede apreciar que los valores varían mucho dependiendo de la estación. Por regla general podríamos decir que las estaciones influyen en los valores, para una comprobación más rigurosa lanzo varios anovas en los que se comprobará.
# Al estar actualizados los datos, no comento nada ya que pueden cambiar según el día que se lance el script,
boxplot(SO2~EstacionName, main = "Análisis de SO2",data= DatasetAgrupado)
boxplot(NO~EstacionName, main = "Análisis de NO",data= DatasetAgrupado)
boxplot(NO2~EstacionName, main = "Análisis de NO2",data= DatasetAgrupado)
boxplot(CO~EstacionName, main = "Análisis de CO",data= DatasetAgrupado)
boxplot(PM10~EstacionName, main = "Análisis de PM10",data= DatasetAgrupado)
boxplot(O3~EstacionName, main = "Análisis de O3",data= DatasetAgrupado)
boxplot(dd~EstacionName, main = "Análisis de dd",data= DatasetAgrupado)
boxplot(vv~EstacionName, main = "Análisis de vv",data= DatasetAgrupado)
boxplot(TMP~EstacionName, main = "Análisis de TMP",data= DatasetAgrupado)
boxplot(HR~EstacionName, main = "Análisis de HR",data= DatasetAgrupado)
boxplot(PRB~EstacionName, main = "Análisis de PRB",data= DatasetAgrupado)
boxplot(RS~EstacionName, main = "Análisis de RS",data= DatasetAgrupado)
boxplot(LL~EstacionName, main = "Análisis de LL",data= DatasetAgrupado)
boxplot(BEN~EstacionName, main = "Análisis de BEN",data= DatasetAgrupado)
boxplot(TOL~EstacionName, main = "Análisis de TOL",data= DatasetAgrupado)
boxplot(MXIL~EstacionName, main = "Análisis de MXIL",data= DatasetAgrupado)
boxplot(PM25~EstacionName, main = "Análisis de PM25",data= DatasetAgrupado)
# ANOVA de SO2
summary(aov(SO2~EstacionName,data = DF2))
# ANOVA de SO2
summary(aov(SO2~EstacionName,data = DatasetAgrupado))
# Carga de las librerías
library(lubridate)
library(leaflet)
library(dplyr)
library(ggplot2)
library(reshape2)
library(stats)
#library(RColorBrewer)
#library(tidyr)
#library(fmsb)
# Creamos el dataset del fichero de las estaciones de Gijon de los últimos 7 días (actualizado a fecha 8 de abril)
# Observar si existe un formato fecha y time...para cálculo del time-series
dataset_gijon <- read.csv("http://opendata.gijon.es/descargar.php?id=1&tipo=CSV", encoding = 'UTF-8', stringsAsFactors = FALSE)
# Veamos los 10 primeros resultados
head(dataset_gijon[1:8], 10)
head(dataset_gijon[9:17], 10)
head(dataset_gijon[18:22], 10)
# Totalizamos los datos resultantes
dim(dataset_gijon)
# Realizamos una copia del dataset original y con un header personalizado sin caracteres especiales
datasetHeader <- c("EstacionID",
"EstacionName","Lat","Lon",
"Fecha_UTC","Periodo",
"SO2","NO","NO2","CO","PM10","O3","dd","vv",
"TMP","HR","PRB","RS","LL","BEN",
"TOL","MXIL","PM25"
)
colnames(dataset_gijon) <- c(datasetHeader)
# Analizamos las diferentes estaciones y las enumeramos
table(dataset_gijon$EstacionID)
table(dataset_gijon$EstacionName)
# Convertimos en categóricas la Estación o ID
dataset_gijon$EstacionID = as.numeric(dataset_gijon$EstacionID)
# Comprobamos nuevamente los resultados
str(dataset_gijon)
rm(datasetHeader)
# Comenzamos con la transformación de la columna fecha y su formato
# anyo = Y
# mes = m
# day = d
# Hour = H
# Minute = M
# Segundos = S
dataset_gijon$Fecha_UTC <- ymd(dataset_gijon$Fecha_UTC, tz = "Europe/Madrid")
dataset_gijon$Date <- format(dataset_gijon$Fecha_UTC, "%Y-%m-%d")
dataset_gijon$Time <- format(dataset_gijon$Fecha_UTC, "%T")
# Este formato tiene un formato calendar-time
# Alternativa con POSIXlt (lista de vectores y al parecer debería ser Human-friendly)
dataset_gijon$DatePOSIXlt <- as.POSIXlt(dataset_gijon$Date, format = "%Y-%m-%d")
# crear : day, month, year, hour, weekday, ...
# Busco valores NA: Sólo hay NA en los campos numéricos por lo que podemos entender que son valores a 0.
C = 1:ncol(dataset_gijon)
for (c in C){
print(names(dataset_gijon[c]))
print(table(is.na(dataset_gijon[,c])))
}
## Cambio los NA por 0
dataset_gijon[is.na(dataset_gijon)] <- 0
rm(C,c)
# Creo un dataset con las estaciones y me dispongo a visualizar su posición en el mapa
Estaciones <- dataset_gijon %>% select(EstacionID,EstacionName,Lat,Lon) %>% distinct()
leaflet() %>%
addTiles() %>%
addMarkers(lng=dataset_gijon$Lon, lat=dataset_gijon$Lat, popup = dataset_gijon$EstacionName)
rm(Estaciones)
## Tengo 17 registros por día y no se especifica la hora, por ello calculo la media de las variables relacionadas con las sustancias emitidas por los procesos de combustión
DatasetAgrupado <- dataset_gijon %>%
filter(Fecha_UTC>'2016-01-01')%>%
group_by(EstacionName,Fecha_UTC) %>%
summarise(
CO = mean(CO),
SO2 = mean(SO2),
NO = mean(NO),
NO2 = mean(NO2),
TOL =mean(TOL),
PM10=mean(PM10),
O3=mean(O3),
dd=mean(dd),
vv=mean(vv),
TMP=mean(TMP),
HR=mean(HR),
PRB=mean(PRB),
RS=mean(RS),
LL=mean(LL),
BEN=mean(BEN),
MXIL = mean(MXIL),
PM25 = mean(PM25)
)
# Grafico de C0
ggplot(data = DatasetAgrupado)+
ggtitle('CO')+
geom_line(mapping = aes(y = CO, x = Fecha_UTC,color =EstacionName))
# Grafico de S02
ggplot(data = DatasetAgrupado)+
ggtitle('SO2')+
geom_line(mapping = aes(y = SO2, x = Fecha_UTC,color =EstacionName))
# Grafico de NO2
ggplot(data = DatasetAgrupado)+
ggtitle('NO')+
geom_line(mapping = aes(y = NO, x = Fecha_UTC,color =EstacionName))
# Grafico de NO2
ggplot(data = DatasetAgrupado)+
ggtitle('NO2')+
geom_line(mapping = aes(y = NO2, x = Fecha_UTC,color =EstacionName))
# Grafico de TOL
ggplot(data = DatasetAgrupado)+
ggtitle('TOL')+
geom_line(mapping = aes(y = TOL, x = Fecha_UTC,color =EstacionName))
# Grafico de NO2
ggplot(data = DatasetAgrupado)+
ggtitle('MXIL')+
geom_line(mapping = aes(y = MXIL, x = Fecha_UTC,color =EstacionName))
# Grafico de NO2
ggplot(data = DatasetAgrupado)+
ggtitle('PM25')+
geom_line(mapping = aes(y = PM25, x = Fecha_UTC,color =EstacionName))
## Los valores de NO2 y NO bajan a la vez
# creo una matriz de correlación
Matcor <- cor(DatasetAgrupado[,c("SO2","NO","NO2","CO","PM10","O3","dd","vv",
"TMP","HR","PRB","RS","LL","BEN",
"TOL","MXIL","PM25")])
melted_Matcor <- melt(Matcor)
library(ggplot2)
ggplot(data = melted_Matcor, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
## Esta matriz da poca información, y es poco visual así que creo una matriz en la sólo figuren las correlaciones fuertes.
melted_Matcor['Value2'] = 0
melted_Matcorpos <- melted_Matcor %>% mutate (Value2 = ifelse(value %in% -0.70:0.70,0,Value2),
Value2 = ifelse(value < -0.70,-1,Value2),
Value2 = ifelse(value > 0.70,1,Value2)
)
ggplot(data = melted_Matcorpos, aes(x=Var1, y=Var2, fill=Value2)) +
ggtitle('Correlacion')+
geom_tile()
rm(Matcor,melted_Matcor,melted_Matcorpos)
# Principales correlaciones Correlaciones:
#   - No y NO2: Ambos son gases generados en los procesos de combustión
#   - TMP, HR, PRB: Temperatura, humedad y presión.
#   - BEN, TOL, MXIL: Las 3 son partículas generadas por emisión de gasolinas y uso de disolventes para pinturas, revestimientos,etc...
# Antes del Anova voy a lanzar unos whisker plots por estacion
# determino los valores de los que quiero el boxplot
#BP <- c("SO2","NO","NO2","CO","PM10","O3","dd","vv",
#                   "TMP","HR","PRB","RS","LL","BEN",
#                   "TOL","MXIL","PM25")
#for (x in BP){
#  boxplot(DatasetAgrupado[x]~DatasetAgrupado['EstacionName'], main = x )
#}
# En los whiskerplot se puede apreciar que los valores varían mucho dependiendo de la estación. Por regla general podríamos decir que las estaciones influyen en los valores, para una comprobación más rigurosa lanzo varios anovas en los que se comprobará.
# Al estar actualizados los datos, no comento nada ya que pueden cambiar según el día que se lance el script,
boxplot(SO2~EstacionName, main = "Análisis de SO2",data= DatasetAgrupado)
boxplot(NO~EstacionName, main = "Análisis de NO",data= DatasetAgrupado)
boxplot(NO2~EstacionName, main = "Análisis de NO2",data= DatasetAgrupado)
boxplot(CO~EstacionName, main = "Análisis de CO",data= DatasetAgrupado)
boxplot(PM10~EstacionName, main = "Análisis de PM10",data= DatasetAgrupado)
boxplot(O3~EstacionName, main = "Análisis de O3",data= DatasetAgrupado)
boxplot(dd~EstacionName, main = "Análisis de dd",data= DatasetAgrupado)
boxplot(vv~EstacionName, main = "Análisis de vv",data= DatasetAgrupado)
boxplot(TMP~EstacionName, main = "Análisis de TMP",data= DatasetAgrupado)
boxplot(HR~EstacionName, main = "Análisis de HR",data= DatasetAgrupado)
boxplot(PRB~EstacionName, main = "Análisis de PRB",data= DatasetAgrupado)
boxplot(RS~EstacionName, main = "Análisis de RS",data= DatasetAgrupado)
boxplot(LL~EstacionName, main = "Análisis de LL",data= DatasetAgrupado)
boxplot(BEN~EstacionName, main = "Análisis de BEN",data= DatasetAgrupado)
boxplot(TOL~EstacionName, main = "Análisis de TOL",data= DatasetAgrupado)
boxplot(MXIL~EstacionName, main = "Análisis de MXIL",data= DatasetAgrupado)
boxplot(PM25~EstacionName, main = "Análisis de PM25",data= DatasetAgrupado)
# ANOVA de SO2
summary(aov(SO2~EstacionName,data = DatasetAgrupado))
# ANOVA de NO
summary(aov(NO~EstacionName,data = DatasetAgrupado))
# ANOVA de NO2
summary(aov(NO2~EstacionName,data = DatasetAgrupado))
# ANOVA de CO
summary(aov(CO~EstacionName,data = DatasetAgrupado))
# ANOVA de PM10
summary(aov(PM10~EstacionName,data = DatasetAgrupado))
# ANOVA de 03
summary(aov(O3~EstacionName,data = DatasetAgrupado))
# ANOVA de dd
summary(aov(dd~EstacionName,data = DatasetAgrupado))
# ANOVA de vv
summary(aov(vv~EstacionName,data = DatasetAgrupado))
# ANOVA de TMP
summary(aov(TMP~EstacionName,data = DatasetAgrupado))
# ANOVA de HR
summary(aov(HR~EstacionName,data = DatasetAgrupado))
# ANOVA de PRB
summary(aov(PRB~EstacionName,data = DatasetAgrupado))
# ANOVA de RS
summary(aov(RS~EstacionName,data = DatasetAgrupado))
# ANOVA de LL
summary(aov(LL~EstacionName,data = DatasetAgrupado))
# ANOVA de BEN
summary(aov(BEN~EstacionName,data = DatasetAgrupado))
# ANOVA de TOL
summary(aov(TOL~EstacionName,data = DatasetAgrupado))
# ANOVA de MXIL
summary(aov(MXIL~EstacionName,data = DatasetAgrupado))
